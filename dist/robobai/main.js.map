{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"margin-left: 200px; margin-right: 200px; background-color: aliceblue;\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li id=\\\"home\\\" class=\\\"active\\\"><a data-toggle=\\\"tab\\\" (click)='changeTab(true)'>Home</a></li>\\n        <li id=\\\"edit\\\"><a data-toggle=\\\"tab\\\" (click)='changeTab(false)'>Edit</a></li>\\n    </ul>\\n    <div class=\\\"tab-content\\\" style=\\\"margin-top: 30px;\\\" *ngIf=\\\"is_edit\\\">\\n        <div class=\\\"col-xs-1\\\">\\n        </div>\\n         <div class=\\\"col-xs-6\\\">\\n            <input type=\\\"text\\\" title=\\\"Search by product name\\\" class=\\\"form-control\\\" placeholder=\\\"Search by product name...\\\" [(ngModel)]=\\\"product_search\\\" (ngModelChange)=\\\"getSearchedProducts()\\\"\\n              [typeahead]=\\\"product_list\\\" typeaheadOptionField=\\\"product_name\\\" (typeaheadOnSelect)=\\\"selectProduct($event)\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" autocomplete=\\\"off\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"homePage\\\" class=\\\"tab-pane fade in active\\\" style=\\\"margin-top: 30px;\\\">\\n        <form [formGroup]=\\\"productForm\\\" (keydown.enter)=\\\"(productForm.valid && (productForm.value.cost_price >= productForm.value.selling_price)) ? saveProductDetails() : (submitted_invalid = true)\\\">\\n            <div class=\\\"col-xs-12 mod_body_single\\\" style=\\\"background-color: bisque;\\\">\\n                <div class='col-xs-12' style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"col-xs-3\\\"><label>Product Id</label></div>\\n                    <div class=\\\"col-xs-6\\\">\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" title=\\\"Product Id\\\" formControlName='product_id' placeholder=\\\"Product Id...\\\" [attr.disabled]=\\\"is_edit ? true : null\\\">\\n                        <small class=\\\"mod_errors\\\" style=\\\"padding-left: 15px; color: red;\\\" *ngIf=\\\"(!productForm.controls['product_id'].valid && submitted_invalid)\\\">*This field is required.</small>\\n                    </div>\\n                </div>\\n                <div class='col-xs-12' style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"col-xs-3\\\"><label>Quantity</label></div>\\n                    <div class=\\\"col-xs-6\\\">\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" title=\\\"Quantity\\\" formControlName='quantity' placeholder=\\\"Quantity...\\\" [attr.disabled]=\\\"is_edit ? true : null\\\">\\n                        <small class=\\\"mod_errors\\\" style=\\\"padding-left: 15px; color: red;\\\" *ngIf=\\\"(!productForm.controls['quantity'].valid && submitted_invalid)\\\">*This field is required.</small>\\n                    </div>\\n                </div>\\n                <div class='col-xs-12' style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"col-xs-3\\\"><label>Product Name</label></div>\\n                    <div class=\\\"col-xs-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" title=\\\"Product Name\\\" formControlName='product_name' placeholder=\\\"Product Name...\\\">\\n                        <small class=\\\"mod_errors\\\" style=\\\"padding-left: 15px; color: red;\\\" *ngIf=\\\"(!productForm.controls['product_name'].valid && submitted_invalid)\\\">*This field is required and must contain alphanumeric value.</small>\\n                    </div>\\n                </div>\\n                <div class='col-xs-12' style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"col-xs-3\\\"><label>Cost Price</label></div>\\n                    <div class=\\\"col-xs-6\\\">\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" title=\\\"Cost Price\\\" formControlName='cost_price' placeholder=\\\"Cost Price...\\\" [attr.disabled]=\\\"is_edit ? true : null\\\">\\n                        <small class=\\\"mod_errors\\\" style=\\\"padding-left: 15px; color: red;\\\" *ngIf=\\\"(!productForm.controls['cost_price'].valid && submitted_invalid)\\\">*This field is required.</small>\\n                    </div>\\n                </div>\\n                <div class='col-xs-12' style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"col-xs-3\\\"><label>Selling Price</label></div>\\n                    <div class=\\\"col-xs-6\\\">\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" title=\\\"Selling Price\\\" formControlName='selling_price' placeholder=\\\"Selling Price...\\\">\\n                        <small class=\\\"mod_errors\\\" style=\\\"padding-left: 15px; color: red;\\\" *ngIf=\\\"((!productForm.controls['selling_price'].valid || (productForm.value.cost_price < productForm.value.selling_price)) && submitted_invalid)\\\">*This field is required and value must be less than cost price.</small>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { CommonService } from './common.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    title = 'robobai';\n    product_search: string = '';\n    product_list: any = [];\n    is_edit: boolean = true;\n    current_id: string = null;\n    submitted_invalid: boolean = false;\n\n    productForm: FormGroup;\n\n    constructor(private commonService: CommonService) {}\n\n    ngOnInit() {\n        this.productForm = new FormGroup({\n            product_id: new FormControl(null, [\n                Validators.required,\n            ]),\n            quantity: new FormControl(null, [\n                Validators.required,\n            ]),\n            product_name: new FormControl(null, [\n                Validators.required,\n                Validators.pattern(/^[a-zA-Z ~!@#$%^&*()_+-/.{}[]|;:'\"<>,?=]+$/)\n            ]),\n            cost_price: new FormControl(null, [\n                Validators.required,\n            ]),\n            selling_price: new FormControl(null, [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/),\n            ])\n        });\n    }\n\n    saveProductDetails() {\n        if(this.current_id)\n            this.productForm.value._id = this.current_id;\n        this.commonService.saveProduct(this.productForm.value)\n        .subscribe(data => {\n            this.productForm.reset();\n            this.current_id = null;\n            this.submitted_invalid = false;\n        });\n    }\n\n    getSearchedProducts() {\n        this.commonService.searchProducts(this.product_search)\n        .subscribe(data => {\n            this.product_list = data;\n        });\n    }\n\n    selectProduct(selected_product) {\n        this.current_id = selected_product.item._id;\n        this.submitted_invalid = false;\n        if(selected_product)\n            this.productForm.reset(selected_product.item);\n    }\n\n    changeTab(is_edit) {\n        this.is_edit = is_edit;\n        this.productForm.reset();\n        this.current_id = null;\n        this.submitted_invalid = false;\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from '@angular/common/http';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonService } from './common.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    TypeaheadModule.forRoot()\n  ],\n  providers: [CommonService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable()\n\nexport class CommonService {\n    url: string = \"http://localhost:3000\";\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    constructor(private http: HttpClient) { }\n\n    saveProduct(data) {\n        let api_url = this.url + '/api/save_product_details';\n        return this.http.post<product>(api_url, data, { headers: this.headers })\n            .pipe(catchError(this.error))\n    }\n\n    searchProducts(product_search) {\n        let api_url = this.url + '/api/product_search?product_search=' + product_search;\n        return this.http.get<product[]>(api_url, { headers: this.headers })\n            .pipe(catchError(this.error))\n    }\n\n    //Throw Error function\n    error(error: HttpErrorResponse) {\n        let error_message = '';\n        if (error.error instanceof ErrorEvent) {\n            error_message = error.error.message;\n        }\n        else {\n            error_message = `Above error occurred. Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(error_message);\n        return throwError(error_message);\n    }\n}\n\ninterface product {\n    _id: string,\n    product_id: number,\n    product_name: string,\n    quantity: number,\n    cost_price: number,\n    selling_price: number\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}